/* =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~ */
/*                                                                            */
/* BASE                                                                       */
/* path: dsf-common-ui/src/scss/base/_base.scss                               */
/*                                                                            */
/* =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~ */

@use "sass:math";
:root{
  @each $name, $value in $brand-colors {
    --color#{$name}: #{$value};
  }
}
// * {
//   scrollbar-width: thin;
// }

// ::-webkit-scrollbar {
//   width: 6px;
//   height: 6px;
//   background-color: #777777;
// }

// ::-webkit-scrollbar-button {
//   width: 6px;
//   height: 6px;
// }

// ::-webkit-scrollbar-track {
//   background-color: #F5F5F5;
// }

// ::-webkit-scrollbar-thumb {
//   background-color: #777777;
// }

html{
  font-size: 12pt;
  font-family: sans-serif;
  // scrollbar-width: thin;
}
body {
  background-color: _brand-palette(body_bgc);
  color: _brand-palette(body_color);
  font-family: Roboto, Arial, 'Helvetica Neue', sans-serif;
  font-size: rem(_fontSizes(body));
  line-height: rem(_lineHeight(body));
  // height: 100vh;  // спорное правило
  min-height: 100vh;  // спорное правило
  text-rendering: optimizeLegibility;
  width: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -moz-font-feature-settings: 'liga', 'kern';
  &.guest-view,
  &.reset-view{
    background-image: linear-gradient(90deg, #002D4E 0%, #005492 100%);
  }
  &.error-view{
    background: linear-gradient(90deg, #002743 0%, #003101 100%);
  }
}

a {
  color: _brand-palette(link_color);
  text-decoration: none;
  &:hover,
  &:focus {
    color: _brand-palette(linkHover_color);
    outline: none;
    text-decoration: none;
  }
  &.dashed {
    border-bottom: _brand-palette(link_color) 1px dashed;
    text-decoration: none;
    &.empty {
      border-bottom-color: _brand-palette(linkEmpty_color);
      color: _brand-palette(linkEmpty_color);
    }
    &.incomplete {
      border-bottom-color: _brand-palette(linkIncomplete_color);
      color: _brand-palette(linkIncomplete_color);
    }
  }
}

hr {
  border: 0;
  border-top: 1px solid _brand-palette(hr_border);
  margin-top: 10px;
  margin-bottom: 10px;

}

code {
  background-color: _brand-palette(code_bgc);
  border-radius: _brand-sizes(border-radius-base);
  color: _brand-palette(code_color);
  font-size: 90%;
  padding: 2px 4px;
  pre &{
    background-color: transparent;
    border-radius: 0;
    color: inherit;
    font-size: inherit;
    padding: 0;
    white-space: pre-wrap;
  }
}

pre {
  background-color: _brand-palette(pre_bgc);
  border: 1px solid _brand-palette(pre_color);
  border-radius: _brand-sizes(border-radius-base);
  color: _brand-palette(pre_color);
  display: block;
  font-size: rem(calc(_fontSizes(body) - 1));
  margin: 0 0 10px;
  line-height: rem(_lineHeight(body));
  padding: 2px 4px;
  word-break: break-all;
  word-wrap: break-word;
  white-space: pre-wrap;
}

p {
  margin: 0 0 rem(10);
}

ul,
ol {
  margin-top: 0;
  margin-bottom: 10px;
  ul,
  ol {
    margin-bottom: 0;
  }
}

mark,
.mark {
  padding: .2em;
  background-color: _brand-palette(mark_bgc);
}

dl {
  margin-top: 0; // Remove browser default
  margin-bottom: $line-height-computed;
}
dt,
dd {
  line-height: $line-height-base;
}
dt {
  font-weight: 700;
}
dd {
  margin-left: 0; // Undo browser default
}

blockquote {
  padding: math.div($line-height-computed, 2) $line-height-computed;
  margin: 0 0 $line-height-computed;
  font-size: $blockquote-font-size;
  border-left: 5px solid $blockquote-border-color;

  p,
  ul,
  ol {
    &:last-child {
      margin-bottom: 0;
    }
  }

  // Note: Deprecated small and .small as of v3.1.0
  // Context: https://github.com/twbs/bootstrap/issues/11660
  footer,
  small,
  .small {
    display: block;
    font-size: 80%; // back to default font-size
    line-height: $line-height-base;
    color: $blockquote-small-color;

    &:before {
      content: "\2014 \00A0"; // em dash, nbsp
    }
  }
}
