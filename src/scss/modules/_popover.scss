/* =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~ */
/*                                                                            */
/* POPOVER                                                                    */
/* path: dsf-common-ui/src/scss/modules/_popover.scss                         */
/*                                                                            */
/* =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~ */
@use 'sass:color';
@use '../utilities/functions/func_fonts' as *;
@use '../utilities/functions/func_bootstrap-v4' as *;
@use '../utilities/variables/var-bootstrap-v4' as *;
@use '../utilities/variables/var-colors' as *;
@use '../utilities/variables/var-sizes' as *;
@use '../utilities/variables/var-lineHeights' as *;
@use '../utilities/variables/var-zindex' as *;
@use '../utilities/variables/var-fonts' as *;

.popover {
  background-color: brandPalette(popover_bgc);
  background-clip: padding-box;
  border-radius: 0;
  border: 1px solid brandPalette(popover_borderColor);
  box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.25);
  display: block;
  font-size: rem(fontSizes(popover));
  letter-spacing: normal;
  left: 0;
  line-break: auto;
  line-height: rem(lineHeight(popover));
  margin: 0;
  max-width: rem(brandSizes(popover_maxWidth));
  position: absolute;
  font-style: normal;
  font-weight: 400;
  opacity: 0;
  text-align: left;
  // text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  top: 0;
  // word-break: normal;
  word-spacing: normal;
  word-wrap: break-word;
  white-space: normal;
  z-index: zIndex(popover);

  // box-shadow: 0 .25rem .5rem brandPalette(popover_borderColor);
  &.show {
    opacity: 1;
  }
  .arrow {
    position: absolute;
    display: block;
    width: rem(brandSizes(popoverArrow_width));
    height: rem(brandSizes(popoverArrow_height));
    margin: 0;
    &::before,
    &::after {
      position: absolute;
      display: block;
      content: "";
      border-color: transparent;
      border-style: solid;
    }
  }
  &.popoverActionMenu {
    .arrow {
      display: none;
    }
  }
  &.popover__wide{
    max-width: rem(brandSizes(popoverWide_maxWidth));
  }
  &.popover__nonmax{
    max-width: none;
  }
}

.bs-popover-top {
  margin-bottom: rem(brandSizes(popoverArrow_height));
  &.popoverActionMenu {
    margin-bottom: 0;
  }
  > .arrow {
    bottom: subtract(calc(-1 * rem(brandSizes(popoverArrow_height))), rem(brandSizes(popover_borderWidth)));

    &::before {
      bottom: 0;
      border-width: rem(brandSizes(popoverArrow_height)) rem(calc(brandSizes(popoverArrow_width) * .5)) 0;
      border-top-color: $popover-arrow-outer-color;
    }

    &::after {
      bottom: rem(brandSizes(popover_borderWidth));
      border-width: rem(brandSizes(popoverArrow_height)) rem(calc(brandSizes(popoverArrow_width) * .5)) 0;
      border-top-color: brandPalette(popover_bgc);
    }
  }
}

.bs-popover-right {
  margin-left: rem(brandSizes(popoverArrow_height));
  &.popoverActionMenu {
    margin-left: 0;
  }
  > .arrow {
    left: subtract(calc(-1 * rem(brandSizes(popoverArrow_height))), rem(brandSizes(popover_borderWidth)));
    width: rem(brandSizes(popoverArrow_height));
    height: rem(brandSizes(popoverArrow_width));
    margin: 0 0; // make sure the arrow does not touch the popover's rounded corners

    &::before {
      left: 0;
      border-width: rem(calc(brandSizes(popoverArrow_width) * .5)) rem(brandSizes(popoverArrow_height)) rem(calc(brandSizes(popoverArrow_width) * .5)) 0;
      border-right-color: $popover-arrow-outer-color;
    }

    &::after {
      left: rem(brandSizes(popover_borderWidth));
      border-width: rem(calc(brandSizes(popoverArrow_width) * .5)) rem(brandSizes(popoverArrow_height)) rem(calc(brandSizes(popoverArrow_width) * .5)) 0;
      border-right-color: brandPalette(popover_bgc);
    }
  }
}

.bs-popover-bottom {
  margin-top: rem(brandSizes(popoverArrow_height));
  &.popoverActionMenu {
    margin-top: 0;
  }
  > .arrow {
    top: subtract(-1 * rem(brandSizes(popoverArrow_height)), rem(brandSizes(popover_borderWidth)));

    &::before {
      top: 0;
      border-width: 0 rem(calc(brandSizes(popoverArrow_width) * .5)) rem(brandSizes(popoverArrow_height)) rem(calc(brandSizes(popoverArrow_width) * .5));
      border-bottom-color: $popover-arrow-outer-color;
    }

    &::after {
      top: rem(brandSizes(popover_borderWidth));
      border-width: 0 rem(calc(brandSizes(popoverArrow_width) * .5)) rem(brandSizes(popoverArrow_height)) rem(calc(brandSizes(popoverArrow_width) * .5));
      border-bottom-color: brandPalette(popover_bgc);
    }
  }

  // This will remove the popover-header's border just below the arrow
  .popover-header::before {
    position: absolute;
    top: 0;
    left: 50%;
    display: block;
    width: rem(brandSizes(popoverArrow_width));
    margin-left: rem(calc(brandSizes(popoverArrow_width) * -0.5));
    content: "";
    border-bottom: rem(brandSizes(popover_borderWidth)) solid brandPalette(popoverHeader_bgc);
  }
}

.bs-popover-left {
  margin-right: rem(brandSizes(popoverArrow_height));
  &.popoverActionMenu {
    margin-right: 0;
  }
  > .arrow {
    right: subtract(-1 * rem(brandSizes(popoverArrow_height)), rem(brandSizes(popover_borderWidth)));
    width: rem(brandSizes(popoverArrow_height));
    height: rem(brandSizes(popoverArrow_width));
    margin: 0 0; // make sure the arrow does not touch the popover's rounded corners

    &::before {
      right: 0;
      border-width: rem(calc(brandSizes(popoverArrow_width) * .5)) 0 rem(calc(brandSizes(popoverArrow_width) * .5)) rem(brandSizes(popoverArrow_height));
      border-left-color: $popover-arrow-outer-color;
    }

    &::after {
      right: rem(brandSizes(popover_borderWidth));
      border-width: rem(calc(brandSizes(popoverArrow_width) * .5)) 0 rem(calc(brandSizes(popoverArrow_width) * .5)) rem(brandSizes(popoverArrow_height));
      border-left-color: brandPalette(popover_bgc);
    }
  }
}

.bs-popover-auto {
  &[x-placement^="top"] {
    @extend .bs-popover-top;
  }
  &[x-placement^="right"] {
    @extend .bs-popover-right;
  }
  &[x-placement^="bottom"] {
    @extend .bs-popover-bottom;
  }
  &[x-placement^="left"] {
    @extend .bs-popover-left;
  }
}


// Offset the popover to account for the popover arrow
.popover-header {
  background-color: brandPalette(popoverHeader_bgc);
  color: brandPalette(popoverHeader_color);
  border-bottom: 1px solid brandPalette(popoverHeader_borderolor);
  border-radius: 0;
  font-size: rem(fontSizes(popoverHeader));
  padding: rem(brandSizes(popover_paddingY)) rem(brandSizes(popover_paddingX));
  margin: 0;
  &:empty {
    display: none;
  }
}

.popover-body {
  background-color: brandPalette(popover_bgc);
  color: brandPalette(popover_color);
  padding: rem(brandSizes(popover_paddingY)) rem(brandSizes(popover_paddingX));
  &:empty {
    display: none;
  }
  .popoverActionMenu &{
    // padding: 10px;
    padding: 0px;
  }
}

.popoverActionMenu__ul{
  list-style-type: none;
  padding-left: 0;
  margin-bottom: 0;
  // li + li{
  //   margin-top: 10px;
  // }
}
