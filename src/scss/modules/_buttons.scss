/* =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~ */
/*                                                                            */
/* BUTTONS                                                                    */
/* path: dsf-common-ui/src/scss/modules/_buttons.scss                         */
/*                                                                            */
/* =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~ */
@use 'sass:map';

@use './../utilities/functions/func_fonts' as *;
@use './../utilities/variables/var-sizes' as *;
@use './../utilities/variables/var-colors' as *;
@use './../utilities/variables/var-fonts' as *;
@use './../utilities/variables/var-lineHeights' as *;
@use './../utilities/mixins_bootstrap-v3/vendor-prefixes' as *;

%btn {
  background-image: none;
  border-style: solid;
  border-color: transparent;
  border-width: #{brandSizes(btn_borderWidth)}px;
  border-radius: #{brandSizes(btn_borderRadius)}px;
  cursor: pointer;
  display: inline-block;
  font-size: rem(fontSizes(btn));
  font-weight: fontWeight(btn);
  line-height: rem(lineHeight(btn));
  // height: min-content; не работает в сафари с <input>
  height: auto;
  margin-bottom: 0; // For input.btn
  padding: 0 #{brandSizes(btn_paddingX)}px;
  text-align: center;
  touch-action: manipulation;
  vertical-align: middle;
  white-space: nowrap;
  @include user-select(none);

  &:hover,
  &:focus,
  &.focus {
    outline: none;
    text-decoration: none;
  }

  &:active,
  &.active {
    // background-image: none;
    outline: 0;
    &:focus{
      outline: none;
    }
  }
  
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    // cursor: none;
    cursor: not-allowed;
    opacity: .65;
    box-shadow: none;
  }

  .badge {
    font-size: 11px;
    line-height: 13px;
    padding: 0px 5px;
  }

  .caret {
    margin-left: 0;
  }

  .svg--icon{
    height: rem(12);
    // margin-right: 10px;
    position: relative;
    top: 2px;
    svg{
      height: rem(12);
      max-width:20px;
      width: auto;
    }
    // &:only-child{
    //   margin-right: 0px;
    // }
  }
}
.glyphicon,
.svg--icon{
  + .btn-text{
    margin-left: 10px;
  }
}
.btn-text{
  + .glyphicon,
  + .svg--icon{
    margin-left: 10px;
  }
}

@each $btn in default, primary, success, danger, warning {
  .btn-#{$btn}{
    @if (brandBtn(#{$btn}_bg) == brandBtn(#{$btn}-end_bg)) {
      background-color: brandBtn(#{$btn}_bg);
      background-image: none;
    }
    @else{
      background-color: brandBtn(#{$btn}_bg);
      background-image: -webkit-linear-gradient(brandBtn(#{$btn}_bg) 0%, brandBtn(#{$btn}-end_bg) 100%);
      background-image: linear-gradient(brandBtn(#{$btn}_bg) 0%, brandBtn(#{$btn}-end_bg) 100%);
    }
    border-color: brandBtn(#{$btn}_border);
    color: brandBtn(#{$btn}_color);
    @if (brandBtn(#{$btn}_bg) == brandBtn(#{$btn}-end_bg)) {
      #{--btn_bg}: brandBtn(#{$btn}_bg);
    }
    @else{ 
      #{--btn_bg}: brandBtn(#{$btn}_bg);
      #{--btn_bgEnd}: brandBtn(#{$btn}-end_bg);
    }
    @if (brandBtn(#{$btn}_bg__hover) == brandBtn(#{$btn}-end_bg__hover)) {
      #{--btn_bg__hover}: brandBtn(#{$btn}_bg__hover);
    }
    @else{
      #{--btn_bgEnd__hover}: brandBtn(#{$btn}-end_bg__hover);
      #{--btn_bg__hover}: brandBtn(#{$btn}_bg__hover);
    }
    #{--borderColor__hover}: brandBtn(#{$btn}_border__hover);
    #{--btn_svg}: brandBtn(#{$btn}_svg);
    #{--btn_svg_blue}: brandBtn(#{$btn}_svg_blue);
    #{--btn_svg__hover}: brandBtn(#{$btn}_svg__hover);
    #{--btn_svg_blue__hover}: brandBtn(#{$btn}_svg_blue__hover);
    @extend %btn;
    &:hover,
    &:focus-visible,
    &:active,
    &.active,
    &.focus {
      @if (brandBtn(#{$btn}_bg__hover) == brandBtn(#{$btn}-end_bg__hover)) {
        background-color: brandBtn(#{$btn}_bg__hover);
        background-image: none;
      }
      @else{
        background-color: brandBtn(#{$btn}_bg__hover);
        background-image: -webkit-linear-gradient(brandBtn(#{$btn}_bg__hover) 0%, brandBtn(#{$btn}-end_bg__hover) 100%);
        background-image: linear-gradient(brandBtn(#{$btn}_bg__hover) 0%, brandBtn(#{$btn}-end_bg__hover) 100%);
      }
      background-position: inherit;
      border-color: brandBtn(#{$btn}_border__hover);
      color: brandBtn(#{$btn}_color__hover);
      .svg--icon {
        svg {
          fill: brandBtn(#{$btn}_svg);
          #{--svg-icon-fill}: brandBtn(#{$btn}_svg__hover);
          #{--svg-icon-stroke}: brandBtn(#{$btn}_svg__hover);
          #{--svg-icon-fill_blue}: brandBtn(#{$btn}_svg_blue__hover);
          #{--svg-icon-stroke_blue}: brandBtn(#{$btn}_svg_blue__hover);
          #{--limited-stroke-off}: _brand-colors(_transparent);
        }
      }
    }
    .svg--icon{
      svg{
        fill: brandBtn(#{$btn}_svg);
        #{--svg-icon-fill}: brandBtn(#{$btn}_svg);
        #{--svg-icon-stroke}: brandBtn(#{$btn}_svg);
        #{--svg-icon-fill_blue}: brandBtn(#{$btn}_svg_blue);
        #{--svg-icon-stroke_blue}: brandBtn(#{$btn}_svg_blue);
        #{--limited-stroke-off}: _brand-colors(_transparent);
      }
    }
  }
}

.btn{
  @extend .btn-default
}

.btn-default {
  .badge {
    background-color: rgba(50, 50, 50, 0.4);
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.3);
    color: #FFF;
    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);
  }
}

@each $btn in default, primary, success, danger, warning {
  .btn-#{$btn}__outline {
    background-color: transparent;
    background-image: none;
    border-color: brandBtn(#{$btn}_border__outline);
    color: brandBtn(#{$btn}_color__outline);
    @extend %btn;
    #{--infotech_svg-colorStroke}: brandBtn(#{$btn}_color__outline);
    #{--infotech_svg-stroke}: brandBtn(#{$btn}_color__outline);
    #{--infotech_svg-fill}: brandBtn(#{$btn}_color__outline);
    #{--infotech_svg-colorFill}: brandBtn(#{$btn}_color__outline);
    &:hover,
    &:focus-visible,
    &:active,
    &.active,
    &.focus {
      background-color: brandBtn(#{$btn}_border__outline);
      background-image: none;
      background-position: inherit;
      color: brandBtn(#{$btn}_color__outline__hover);
      #{--infotech_svg-colorStroke}: brandBtn(#{$btn}_color__outline__hover);
      #{--infotech_svg-stroke}: brandBtn(#{$btn}_color__outline__hover);
      #{--infotech_svg-fill}: brandBtn(#{$btn}_color__outline__hover);
      #{--infotech_svg-colorFill}: brandBtn(#{$btn}_color__outline__hover);
      .svg--icon {
        svg {
          #{--svg-icon-fill}: brandBtn(#{$btn}_color__outline__hover);
          #{--svg-icon-stroke}: brandBtn(#{$btn}_color__outline__hover);
          #{--svg-icon-fill_blue}: brandBtn(#{$btn}_color__outline__hover);
          #{--svg-icon-stroke_blue}: brandBtn(#{$btn}_color__outline__hover);
          fill: brandBtn(#{$btn}_color__outline__hover);
          #{--limited-stroke-off}: _brand-colors(_transparent);
        }
      }
      .bicolors-filter,
      .bicolors-filter__24vb{
        #{--infotech_svg-colorStroke}: brandBtn(#{$btn}_border__outline);
      }
    }
    .svg--icon {
      svg {
        #{--svg-icon-fill_blue}: brandBtn(#{$btn}_color__outline);
        #{--svg-icon-stroke_blue}: brandBtn(#{$btn}_color__outline);
        #{--svg-icon-fill}: brandBtn(#{$btn}_color__outline);
        #{--svg-icon-stroke}: brandBtn(#{$btn}_color__outline);
        fill: brandBtn(#{$btn}_color__outline);
        #{--limited-stroke-off}: _brand-colors(_transparent);
      }
    }
    .bicolors-filter,
    .bicolors-filter__24vb{
      #{--infotech_svg-colorStroke}: #fff;
    }
  }
}

a.btn {
  &.disabled,
  fieldset[disabled] & {
    pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
  }
}

// .btn,
// .btn-sm,
// .btn-md,
// .btn-lg{
//   font-size: rem(fontSizes(btn));
//   line-height: rem(lineHeight(btn));
//   padding: 0 #{brandSizes(btn_paddingX)}px;
// }

.btn-xs,
.btn-small {
  border-radius: 1px;
  font-size: rem(fontSizes(btnXs));
  line-height: rem(lineHeight(btnXs));
  padding: #{brandSizes(btnXs-paddingY)}px #{brandSizes(btnXs-paddingX)}px;
}

.btn-large {
  border-radius: 1px;
  font-size: rem(fontSizes(btnLg));
  line-height: rem(lineHeight(btnLg));
  padding: #{brandSizes(btnLg-paddingY)}px #{brandSizes(btnLg-paddingX)}px;
}


.btn-link {
  background-color: transparent;
  background-image: none;
  border-radius: 0;
  box-shadow: none;
  color: brandPalette(link_color);
  cursor: pointer;
  font-weight: fontWeight(btn);
  @extend %btn;
  &,
  &:hover,
  &:focus,
  &[disabled],
  fieldset[disabled] &,
  &.active,
  &:active {
    background-color: transparent;
    background-image: none;
    border-color: transparent;
    box-shadow: none;
    outline: none;
  }
  &:hover,
  &:focus-visible {
    color: brandPalette(linkHover_color);
    text-decoration: none;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus-visible {
      color: brandPalette(linkDisabled_color);
      text-decoration: none;
    }
  }
  .glyphicons-bin{
    #{--svg-icon-fill}: brandColors(_red);
  }
  .svg--icon {
    #{--svg-icon-fill}: brandPalette(btnIconSvg_color);
    #{--svg-icon-stroke}: brandPalette(btnIconSvg_color);
  }
}

.btn-icon{
  background-color: transparent;
  background-image: none;
  box-shadow: none;
  border: none;
  color: map.get($brand-namecolors, 'default');
  cursor: pointer;
  display: inline-block;
  outline: none;
  padding: 0;
  text-align: left;
  .glyphicon {
    color: brandPalette(btnIconSvg_color);
    font-size: rem(brandSizes(btnIcon_height));
    height: rem(brandSizes(btnIcon_height));
    top: 0;
    vertical-align: middle;
  }
  .svg--icon {
    height: rem(brandSizes(btnIcon_height));
    vertical-align: middle;
    svg{
      height: rem(brandSizes(btnIcon_height));
    }
    #{--svg-icon-fill}: brandPalette(btnIconSvg_color);
    #{--svg-icon-fill_blue}: brandPalette(btnIconSvg_color);
    #{--svg-icon-stroke_blue}: brandPalette(btnIconSvg_color);
    #{--svg-icon-stroke}: brandPalette(btnIconSvg_color);
    #{--limited-stroke-off}: _brand-colors(_transparent);
  }
  &__h12{
    .glyphicon {
      font-size: rem(12);
      height: rem(12);
    }
    .svg--icon {
      height: rem(12);
      svg{ 
        height: rem(12);
      }
    }
  }
  &__h14{
    .glyphicon {
      font-size: rem(14);
      height: rem(14);
    }
    .svg--icon {
      height: rem(14);
      svg{ 
        height: rem(14);
      }
    }
  }
  &__h18{
    .glyphicon {
      font-size: rem(18);
      height: rem(18);
    }
    .svg--icon {
      height: rem(18);
      svg{ 
        height: rem(18);
      }
    }
  }
  &__h20{
    .glyphicon {
      font-size: rem(20);
      height: rem(20);
    }
    .svg--icon {
      height: rem(20);
      svg{ 
        height: rem(20);
      }
    }
  }
  &__h22{
    .glyphicon {
      font-size: rem(22);
      height: rem(22);
    }
    .svg--icon {
      height: rem(22);
      svg{ 
        height: rem(22);
      }
    }
  }
  &__h24{
    .glyphicon {
      font-size: rem(24);
      height: rem(24);
    }
    .svg--icon {
      height: rem(24);
      svg{ 
        height: rem(24);
      }
    }
  }
  .nostroke{
    stroke: none;
  }
  .nofill{
    fill: none;
  }
  .fill{
    fill: brandPalette(btnIconSvg_color);
  }
  .stroke{
    stroke: brandPalette(btnIconSvg_color);
  }
  &:hover,
  &:focus {
      background-color: transparent;
      background-image: none;
      box-shadow: none;
      // color: #2a6598;
      outline: 0;
  }
  .control-label + & {
    margin-left: 4px;
    position: relative;
    top: -#{calc(brandSizes(controlLabel_mb) * .5)}px;
  }
  .glyphicons-bin{
    #{--svg-icon-fill}: brandColors(_red);
  }
}

.btn-block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px;
}

.btn__abs{
  margin-top: -#{calc((brandSizes(btn_borderWidth) + lineHeight(btn)) * .5)}px;
  position: absolute;
  top: 50%;
}

.btn__activable{
  .btn-text_isActiveOn{
    display: none;
  }
  .btn-text_isDefaultOn{
    display: inline-block;
  }
  &.active {
     .btn-text_isActiveOn{
      display: inline-block;
    }
    .btn-text_isDefaultOn{
      display: none;
    }
  }
}
// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

.btn-download{
  background: var(--color_white);
  border: 1px dashed var(--color_light-blue);
  box-shadow: none;
  color: var(--color_light-blue);
  cursor: pointer;
  display: flex;
  font-size: rem(10);
  font-weight: 400;
  line-height: 12px;
  margin-bottom: 0;
  height: 64px;
  padding: 4px;
  outline: none;
  &_inner{
    align-items: center;
    background: var(--color_light-blue2);
    display: flex;
    height: 100%;
    justify-content: center;
    flex-direction: column;
    width: 100%;
  }
  &:hover, &:focus {
    background-image: none;
    box-shadow: none;
    outline: 0;
  }
  &__circle{
    border-radius: 115px;
    height: 115px;
    width: 115px;
    .btn-download_inner{
      border-radius: 100%;
    }
  }
  &__dragover{
    opacity: 0.4;
  }
  &__onHover{
    opacity: 0;
    z-index: 1;
    &:hover{
      opacity: 1;
    }
    &:active{
      .mobile-view &{
        opacity: 1;
      }
    }
  }
  &__size128{
    height: rem(128);
    width: rem(128);
    min-width: rem(128);
  }
  .btn-text{
    margin: 0;
    line-height: 12px;
  }
  .svg--icon {
    height: rem(20);
    vertical-align: middle;
    width: rem(20);
    #{--svg-icon-fill}: brandPalette(btnIconSvg_color);
    #{--svg-icon-fill_blue}: brandPalette(btnIconSvg_color);
    #{--svg-icon-stroke_blue}: brandPalette(btnIconSvg_color);
    #{--svg-icon-stroke}: brandPalette(btnIconSvg_color);
    #{--limited-stroke-off}: _brand-colors(_transparent);
    svg{
      height: rem(20);
    }
  }
  .fill{
    fill: brandPalette(btnIconSvg_color);
  }
  .stroke{
    stroke: brandPalette(btnIconSvg_color);
  }
}