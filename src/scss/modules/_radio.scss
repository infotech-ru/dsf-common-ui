/* =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~ */
/*                                                                            */
/* RADIO                                                                      */
/* path: dsf-common-ui/src/scss/modules/_radio.scss                           */
/*                                                                            */
/* =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~ */

@use './../utilities/functions/func_fonts' as *;
@use './../utilities/mixins/svg-icon' as *;
@use './../utilities/variables/var-bootstrap-v3' as *;
@use './../utilities/variables/var-sizes' as *;
@use './../utilities/variables/var-colors' as *;
@use './../utilities/variables/var-lineHeights' as *;
@use './../utilities/variables/var-dataImages' as dataimages;

.radioCheck{
    padding-left: 0px;
    input[type=radio]:checked + label.radio{
        font-weight: 700;
        &:before {
            display: none;
        }
        &:after{
            color: var(--color_green);
            content: attr(data-mainImageText);
        }
        .svg--icon{
            --svg-icon-stroke: var(--color_green);
            --svg-icon-stroke_blue: var(--color_green);
        }
    }
    input[type=radio] {
        clip: rect(0, 0, 0, 0);
        position: absolute;
        margin: 0;
        left: 1px;
        top: 3px;
    }
    label{
        &.radio {
            color: var(--color_white);
            cursor: pointer;
            font-size: rem(15);
            font-weight: 400;
            height: auto;
            line-height: rem(18);
            margin-bottom: 0;
            padding: 0;
            position: relative;
            text-transform: uppercase;
            &:before {
                display: none;
            }
            &:after{
                background-color: transparent;
                border-radius: rem(8);
                content: attr(data-plainImageText);
                color: var(--color_white);
                display: inline-block;
                font-size: rem(15);
                height: auto;
                position: relative;
                line-height: rem(18);
                margin-top: rem(-4);
                text-transform: uppercase;
            }
            .svg--icon{
                margin-right: rem(6);
                vertical-align: text-top;
                --svg-icon-stroke: var(--color_white);
                --svg-icon-stroke_blue: var(--color_white);
                height: rem(16);
                width: rem(16);
                svg{
                    height: rem(16);
                    width: rem(16);
                }
            }
        }
    }
}

.radio-item {
    padding-left: rem(brandSizes(radioItem_size) + brandSizes(radioItemBorder_size) + brandSizes(radioItem_paddingText));
    position: relative;
    &.checked label.radio,
    label.radio.checked,
    input[type=radio]:checked + label.radio{
        font-weight: normal;
        &:before {
            background-color: brandPalette(radioItem-active_bg);
            border-color: brandPalette(radioItem-active_border);
        }
        &:after{
            display: block;
        }
    }
    
    input[type=radio] {
        clip: rect(0, 0, 0, 0);
        margin: 0;
        position: absolute;
        &[disabled] + label.radio:before,
        .disabled & + label.radio:before,
        &[disabled] + label.radio:after,
        .disabled & + label.radio:after {
            cursor: $cursor-disabled;
            pointer-events: none;
        }

        &[disabled] + label.radio,
        .disabled & + label.radio {
            color: brandPalette(radioItemDisabled_color);
            cursor: $cursor-disabled;
            pointer-events: none;
        }
    }
    .dublicate & label.radio,
    &.dublicate label.radio{
        color: brandPalette(radioItemDisabled_color);
        text-decoration: line-through;
    }
    label{
        &.radio {
            cursor: pointer;
            font-weight: normal;
            // min-height: rem(lineHeight(radioItemLabel));
            line-height: rem(lineHeight(input) + (brandSizes(formControl_borderSize) * 2));
            margin-bottom: 0;
            padding-top: 0;
            padding-left: 0;
            position: relative;
            &:before {
                border-radius: 100%;
                background-color: brandPalette(radioItem_bg);
                border: rem(brandSizes(radioItemBorder_size)) solid brandPalette(radioItem_border);
                content: " ";
                display: block;
                height: rem(brandSizes(radioItem_size));
                left: rem(-(brandSizes(radioItem_size) + brandSizes(radioItemBorder_size) + brandSizes(radioItem_paddingText)));
                margin-top: rem(-(brandSizes(radioItem_size) * 0.5));
                position: absolute;
                top: 50%;
                width: rem(brandSizes(radioItem_size));
            }
            &:after{
                background-color: brandPalette(radioItemDotActive);
                background-repeat: no-repeat;
                background-position: center center;
                background-image: var(--radioItemDotActive_image, none);
                background-size: 74%, auto;
                border-radius: 100%;
                content: " ";
                display: none;
                height: rem(brandSizes(radioItemDot_size));
                left: rem(-(brandSizes(radioItem_paddingText) + brandSizes(radioItemBorder_size) + brandSizes(radioItemDot_size) + ((brandSizes(radioItem_size) - brandSizes(radioItemDot_size)) * 0.5)));
                position: absolute;
                top: 50%;
                margin-top: rem(-(brandSizes(radioItemDot_size) * 0.5));
                width: rem(brandSizes(radioItemDot_size));
                --checkboxItemActive_image: url(dataimages.brandDataImage(checkIcon));
            }
            span{
                display: inline-block;
                font-weight: 400;
                line-height: rem(brandSizes(radioItem_size));
                vertical-align: middle;
            }
        }
    }
}
