/* =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~ */
/*                                                                            */
/* LABELS                                                                     */
/* path: dsf-common-ui/src/scss/modules/_labels.scss                          */
/*                                                                            */
/* =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~ */

@use './../utilities/functions/func_fonts' as *;
@use './../utilities/functions/func_maps' as *;
@use './../utilities/variables/var-colors' as *;
@use './../utilities/variables/var-placeholder' as *;

%label{
  align-items: center;
  border-radius: 2px;
  background-color: var(--label_bgc, brandColors(_transparent));
  color: var(--label_color, brandColors(_white));
  display: inline-flex;
  font-size: rem(10);
  font-weight: 700;
  line-height: rem(16);
  min-height: rem(16);
  padding: 0 rem(5) 0.05em rem(4);
  text-align: center;
  text-transform: uppercase;
  white-space: nowrap;
}

.label {
  @extend %label;
  &:empty {
    display: none;
  }
  // Quick fix for labels in buttons
  .btn & {
    position: relative;
    top: -1px;
  }
  &_text{
    display: inline-flex;
    & + .svg--icon{
      margin-left: 4px;
    }
    .svg--icon + &{
      margin-left: 4px;
    }
  }
  .svg--icon{
    display: inline-flex;
    height: var(--svgIcon_height, 12px);
    width: var(--svgIcon_height, 12px);
    svg{
      height: var(--svgIcon_height, 12px);
      width: var(--svgIcon_height, 12px);
    }
  }
}

.label__after{
  &:after{
    @extend %label;
    content: attr(data-label-text);
    margin-left: var(--label_margin-left, 5px);
  }
}

.label__before{
  &:before{
    @extend %label;
    content: attr(data-label-text);
    margin-right: var(--label_margin-right, 5px);
  }
}
.label__big{
  font-size: rem(12);
  line-height: rem(19);
  min-height: rem(19);
}
.label_chip{
  align-items: center;
  background-color: var(--label_bgc, brandColors(_transparent));
  border-radius: rem(12);
  border-style: solid;
  border-width: 1px;
  border-color: var(--label_borderColor, brandColors(_light-blue));
  color: var(--label_color, brandColors(_light-blue));
  display: inline-flex;
  font-size: rem(12);
  font-weight: 400;
  padding: 0 rem(7);
  line-height: rem(21);
  min-height: rem(21);
  text-transform: none;
  text-align: center;
  white-space: nowrap;
}

@each $name, $value in $brand-label {
  .label-#{$name}{
    #{--label_color}: map-deep-get($brand-label, $name, 'color');
    #{--svg-valute-fill}: map-deep-get($brand-label, $name, 'color');
    #{--label_bgc}: map-deep-get($brand-label, $name, 'bg');
    #{--label_borderColor}: brandColors(_transparent);
    #{--svg-icon-fill}: map-deep-get($brand-label, $name, 'svg');
    #{--svg-icon-stroke}: map-deep-get($brand-label, $name, 'svg');
    #{--svg-icon-fill_blue}: map-deep-get($brand-label, $name, 'svg');
    #{--svg-icon-stroke_blue}: map-deep-get($brand-label, $name, 'svg');
  }
  .label-#{name}__outline{
    #{--label_color}: map-deep-get($brand-label, $name, 'bg');
    #{--svg-valute-fill}: map-deep-get($brand-label, $name, 'bg');
    #{--label_borderColor}: map-deep-get($brand-label, $name, 'bg');
    #{--label_bgc}: brandColors(_transparent);
    #{--svg-icon-fill}: map-deep-get($brand-label, $name, 'bg');
    #{--svg-icon-stroke}: map-deep-get($brand-label, $name, 'bg');
    #{--svg-icon-fill_blue}: map-deep-get($brand-label, $name, 'bg');
    #{--svg-icon-stroke_blue}: map-deep-get($brand-label, $name, 'bg');
  }
}



// Add hover effects, but only for links
a.label {
  &:hover,
  &:focus {
    color: brandColors(_white);
    text-decoration: none;
    cursor: pointer;
  }
}
