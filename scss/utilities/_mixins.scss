// ---------------------------- //
// Mixins
// --------------------------------------------------

// Utilities
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/hide-text";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/opacity";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/image";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/labels";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/reset-filter";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/resize";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/responsive-visibility";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/size";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/tab-focus";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/reset-text";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/text-emphasis";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/text-overflow";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/vendor-prefixes";

// Components
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/alerts";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/buttons";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/panels";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/pagination";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/list-group";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/nav-divider";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/forms";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/progress-bar";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/table-row";

// Skins
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/background-variant";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/border-radius";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/gradients";

// Layout
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/clearfix";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/center-block";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/nav-vertical-align";
// @import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/grid-framework";
@import "~bootstrap/scss/mixins/_breakpoints";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/grid";

@import "mixins/grid";
//  ------------------------------------------------------Mixins //
// отклчючить все тени если использовать mixin
@mixin box-shadow($shadow...) {
  @if $enable-shadows {
    box-shadow: $shadow;
  }
}

//  ------------------------------------------------------Mixins //
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
      -ms-transform: translate($x, $y); // IE9 only
       -o-transform: translate($x, $y);
          transform: translate($x, $y);
}

// Transformations
@mixin scale($ratio...) {
  -webkit-transform: scale($ratio);
      -ms-transform: scale($ratio); // IE9 only
       -o-transform: scale($ratio);
          transform: scale($ratio);
}

@mixin scaleX($ratio) {
  -webkit-transform: scaleX($ratio);
      -ms-transform: scaleX($ratio); // IE9 only
       -o-transform: scaleX($ratio);
          transform: scaleX($ratio);
}
@mixin scaleY($ratio) {
  -webkit-transform: scaleY($ratio);
      -ms-transform: scaleY($ratio); // IE9 only
       -o-transform: scaleY($ratio);
          transform: scaleY($ratio);
}
@mixin skew($x, $y) {
  -webkit-transform: skewX($x) skewY($y);
      -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
       -o-transform: skewX($x) skewY($y);
          transform: skewX($x) skewY($y);
}
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
      -ms-transform: translate($x, $y); // IE9 only
       -o-transform: translate($x, $y);
          transform: translate($x, $y);
}
@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
          transform: translate3d($x, $y, $z);
}
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
      -ms-transform: rotate($degrees); // IE9 only
       -o-transform: rotate($degrees);
          transform: rotate($degrees);
}
@mixin rotateX($degrees) {
  -webkit-transform: rotateX($degrees);
      -ms-transform: rotateX($degrees); // IE9 only
       -o-transform: rotateX($degrees);
          transform: rotateX($degrees);
}
@mixin rotateY($degrees) {
  -webkit-transform: rotateY($degrees);
      -ms-transform: rotateY($degrees); // IE9 only
       -o-transform: rotateY($degrees);
          transform: rotateY($degrees);
}
@mixin perspective($perspective) {
  -webkit-perspective: $perspective;
     -moz-perspective: $perspective;
          perspective: $perspective;
}
@mixin perspective-origin($perspective) {
  -webkit-perspective-origin: $perspective;
     -moz-perspective-origin: $perspective;
          perspective-origin: $perspective;
}
@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
     -moz-transform-origin: $origin;
      -ms-transform-origin: $origin; // IE9 only
          transform-origin: $origin;
}
//  ------------------------------------------------------Mixins //
// Animations
@mixin animation($animation) {
  -webkit-animation: $animation;
       -o-animation: $animation;
          animation: $animation;
}
@mixin animation-name($name) {
  -webkit-animation-name: $name;
          animation-name: $name;
}
@mixin animation-duration($duration) {
  -webkit-animation-duration: $duration;
          animation-duration: $duration;
}
@mixin animation-timing-function($timing-function) {
  -webkit-animation-timing-function: $timing-function;
          animation-timing-function: $timing-function;
}
@mixin animation-delay($delay) {
  -webkit-animation-delay: $delay;
          animation-delay: $delay;
}
@mixin animation-iteration-count($iteration-count) {
  -webkit-animation-iteration-count: $iteration-count;
          animation-iteration-count: $iteration-count;
}
@mixin animation-direction($direction) {
  -webkit-animation-direction: $direction;
          animation-direction: $direction;
}
@mixin animation-fill-mode($fill-mode) {
  -webkit-animation-fill-mode: $fill-mode;
          animation-fill-mode: $fill-mode;
}

//  ------------------------------------------------------Mixins //
// Transitions


@mixin transition($transition...) {
  @if $enable-transitions {
    @if length($transition) == 0 {
      -webkit-transition: $transition-base;
       -o-transition: $transition-base;
          transition: $transition-base;
    } @else {
      -webkit-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
    }
  }
}

// @mixin transition($transition...) {
//   -webkit-transition: $transition;
//        -o-transition: $transition;
//           transition: $transition;
// }

@mixin transition-property($transition-property...) {
  -webkit-transition-property: $transition-property;
          transition-property: $transition-property;
}
@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
          transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration...) {
  -webkit-transition-duration: $transition-duration;
          transition-duration: $transition-duration;
}
@mixin transition-timing-function($timing-function) {
  -webkit-transition-timing-function: $timing-function;
          transition-timing-function: $timing-function;
}
@mixin transition-transform($transition...) {
  -webkit-transition: -webkit-transform $transition;
     -moz-transition: -moz-transform $transition;
       -o-transition: -o-transform $transition;
          transition: transform $transition;
}
//  ------------------------------------------------------Mixins //
@mixin reset-text() {
  font-family: $font-family-base;
  // We deliberately do NOT reset font-size.
  font-style: normal;
  font-weight: normal;
  letter-spacing: normal;
  line-break: auto;
  line-height: $line-height-base;
  text-align: left; // Fallback for where `start` is not supported
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  white-space: normal;
  word-break: normal;
  word-spacing: normal;
  word-wrap: normal;
}

//  ------------------------------------------------------Mixins //
@mixin text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

//  ------------------------------------------------------Mixins //
@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: alpha(opacity=$opacity-ie);
}

//  ------------------------------------------------------Mixins //
@mixin img-responsive($display: block) {
  display: $display;
  max-width: 100%; // Part 1: Set a maximum relative to the parent
  height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
}

//  ------------------------------------------------------Mixins //
// Placeholder
@mixin placeholder($color: $placeholder-color, $fw: $placeholder-fw) {
  &::-moz-placeholder {
    color: $color;
    font-weight: $fw;
    opacity: 1;
  }
  &:-moz-placeholder {
    color: $color;
    font-weight: $fw;
    opacity: 1;
  }
  &:-ms-input-placeholder {
    color: $color;
    font-weight: $fw;
    opacity: 1;
  } // Internet Explorer 10+
  &::-webkit-input-placeholder  {
    color: $color;
    font-weight: $fw;
    opacity: 1;
  } // Safari and Chrome
}
@mixin placeholder2($color: $placeholder-color, $fw: $placeholder-fw, $fz: $placeholder-fz) {
  &::-moz-placeholder {
    color: $color;
    font-weight: $fw;
    font-size: rem($fz);
    opacity: 1;
  }
  &:-moz-placeholder {
    color: $color;
    font-size: rem($fz);
    font-weight: $fw;
    opacity: 1;
  }
  &:-ms-input-placeholder {
    color: $color;
    font-size: rem($fz);
    font-weight: $fw;
    opacity: 1;
  } // Internet Explorer 10+
  &::-webkit-input-placeholder  {
    color: $color;
    font-size: rem($fz);
    font-weight: $fw;
    opacity: 1;
  } // Safari and Chrome
}
//  ------------------------------------------------------Mixins //
@mixin keyframes($name){
    @-webkit-keyframes #{$name} {@content}
    @-moz-keyframes #{$name} {@content}
    @-o-keyframes #{$name} {@content}
    @keyframes #{$name} {@content}
}

//  ------------------------------------------------------Mixins //
//  поддерживает пропорции вложенного блока ".content"/
// Syntax:
// .any-class {@include aspect-ratio(16, 9);}
@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}


//  ------------------------------------------------------Mixins //
// Другой вариант с не пропорциоанльным расширением по высоте вылизающего контента
// Responsive Aspect-Ratio
// Syntax:
// @include aspect-ratio($ratio or $width, $height);
@mixin aspect-ratio-height($arglist... /*$width/$ratio, $height*/){
  $map : keywords($arglist);
  $height: map-get($map, height) or nth-or-null($arglist, 2);
  $width:  map-get($map, width)  or nth-or-null($arglist, 1);
  $ratio:  map-get($map, ratio)  or if($width and $height, $width/$height, nth-or-null($arglist, 1)) or 1;
  $padding: 1/$ratio * 100%;
  &:before { content: ''; float:left; padding-bottom: $padding; margin-right:-100%; }
  &:after  { content: ''; display:table; clear: both; }
}


//  ------------------------------------------------------Mixins //
// Gives a card depth effect. / Материальный дизайн. 5 "глубин" теней
// @param {Number} $depth - depth level (between 1 and 5)
// @requires {function} top-shadow
// @requires {function} bottom-shadow
@mixin card($depth) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);
  }
}


//  ------------------------------------------------------Mixins //
// Позиционирование

/// Shorthand mixin for offset positioning
/// @param {String} $position - Either `relative`, `absolute` or `fixed`
/// @param {Length} $top [null] - Top offset
/// @param {Length} $right [null] - Right offset
/// @param {Length} $bottom [null] - Bottom offset
/// @param {Length} $left [null] - Left offset
@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// @param {Arglist} $args - Offsets
// @require {mixin} position

// Syntax:
// @include absolute($top: 1em, $left: 50%)
@mixin absolute($args...) {
  @include position(absolute, $args...);
}

@mixin relative($args...) {
  @include position(relative, $args...);
}

@mixin fixed($args...) {
  @include position(fixed, $args...);
}


//  ------------------------------------------------------Mixins //
@mixin linx ($link, $visit, $hover, $active) {
  a {
    color: $link;
    &:visited {
      color: $visit;
    }
    &:hover, &:focus {
      color: $hover;
    }
    &:active {
      color: $active;
    }
  }
}


//  ------------------------------------------------------Mixins //
// Миксин для создания префиксов для single и multiple
// Prefixes usage
// Syntax:

// .selector {
//   @include prefs((
//     column-count: 3,
//     column-gap: 1.5em,
//     column-rule: 2px solid hotpink
//   ), $using-vendors);
// }
// .class {@include pref(column-count,3,webkit moz ms);}

$all-vendors: (
  'webkit','apple','khtml',
  'moz','rim','xv',
  'ms','o'
);

$using-vendors: (
  'webkit', 'moz', 'ms', 'o'
);
// Mixin for multiple declarations
// Syntax:
// selector {
//   @include prefix((
//     column-count: 3,
//     column-gap: 1.5em,
//     column-rule: 2px solid hotpink
//   ), webkit moz);
// }
@mixin prefix($declarations, $prefixes: ()) {
 @each $property, $value in $declarations {
   @each $prefix in $prefixes {
     #{'-' + $prefix + '-' + $property}: $value;
   }
   #{$property}: $value;
 }
}

// Mixin for single property to be prefixed
//  Syntax:
// .selector {@include pref(transform, rotate(45deg), webkit ms);}

@mixin pref($property, $value, $prefixes){
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
  #{$property}: $value;
}

//  ------------------------------------------------------Mixins //
// Миксин для задания размеров svg иконко
// Prefixes usage
// Syntax:
// @include svg-icon(HHpx); или @include svg-icon(HHpx, WWpx);
// Результат:
//     {height: HHpx;  width: auto;} или  {height: HHpx;  width: WW;}

@mixin svg-icon($height, $width:auto){
  height: $height;
  width: $width;
  svg{
    height: $height;
    width: $width;
  }
}

//  ------------------------------------------------------Mixins //
// Gradients



// Horizontal gradient, from left to right
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
// Color stops are not available in IE9 and below.
@mixin gradient-horizontal($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
  background-image: -webkit-linear-gradient(left, $start-color $start-percent, $end-color $end-percent); // Safari 5.1-6, Chrome 10+
  background-image: -o-linear-gradient(left, $start-color $start-percent, $end-color $end-percent); // Opera 12
  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1); // IE9 and down
}

// Vertical gradient, from top to bottom
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
// Color stops are not available in IE9 and below.
@mixin gradient-vertical($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
  background-image: -webkit-linear-gradient(top, $start-color $start-percent, $end-color $end-percent);  // Safari 5.1-6, Chrome 10+
  background-image: -o-linear-gradient(top, $start-color $start-percent, $end-color $end-percent);  // Opera 12
  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=0); // IE9 and down
}

@mixin gradient-directional($start-color: #555, $end-color: #333, $deg: 45deg) {
  background-repeat: repeat-x;
  background-image: -webkit-linear-gradient($deg, $start-color, $end-color); // Safari 5.1-6, Chrome 10+
  background-image: -o-linear-gradient($deg, $start-color, $end-color); // Opera 12
  background-image: linear-gradient($deg, $start-color, $end-color); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
}
@mixin gradient-horizontal-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
  background-image: -webkit-linear-gradient(left, $start-color, $mid-color $color-stop, $end-color);
  background-image: -o-linear-gradient(left, $start-color, $mid-color $color-stop, $end-color);
  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1); // IE9 and down, gets no color-stop at all for proper fallback
}
@mixin gradient-vertical-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
  background-image: -webkit-linear-gradient($start-color, $mid-color $color-stop, $end-color);
  background-image: -o-linear-gradient($start-color, $mid-color $color-stop, $end-color);
  background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=0); // IE9 and down, gets no color-stop at all for proper fallback
}
@mixin gradient-radial($inner-color: #555, $outer-color: #333) {
  background-image: -webkit-radial-gradient(circle, $inner-color, $outer-color);
  background-image: radial-gradient(circle, $inner-color, $outer-color);
  background-repeat: no-repeat;
}
@mixin gradient-striped($color: rgba(255,255,255,.15), $angle: 45deg) {
  background-image: -webkit-linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
  background-image: -o-linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
}

@mixin svg-icon-variant($parent, $color) {
  #{$parent} {
    fill: $color;
    svg {
      fill: $color;
    }
    &.svg--icon {
      svg{
        fill: $color;
      }
    }
  }
}
