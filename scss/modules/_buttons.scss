/* =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~ */
/*                                                                            */
/* BUTTONS                                                                    */
/* path: modules/_buttons.scss                                                */
/*                                                                            */
/* =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~ */
%btn {
  background-image: none;
  border-style: solid;
  border-color: transparent;
  border-width: #{_brand-sizes(btn_borderWidth)}px;
  border-radius: #{_brand-sizes(btn_borderRadius)}px;
  cursor: pointer;
  display: inline-block;
  font-size: rem(_fontSizes(btn));
  font-weight: _fontWeight(btn);
  line-height: rem(_lineHeight(btn));
  margin-bottom: 0; // For input.btn
  padding: 0 #{_brand-sizes(btn_paddingX)}px;
  text-align: center;
  touch-action: manipulation;
  vertical-align: middle;
  white-space: nowrap;
  @include user-select(none);

  &:hover,
  &:focus,
  &.focus {
    outline: none;
    text-decoration: none;
  }

  &:active,
  &.active {
    // background-image: none;
    outline: 0;
    &:focus{
      outline: none;
    }
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: none;
    cursor: not-allowed;
    @include opacity(.65);
    @include box-shadow(none);
  }

  .badge {
    font-size: 11px;
    line-height: 13px;
    padding: 0px 5px;
  }

  .svg--icon{
    height: rem(12);
    margin-right: 2px;
    position: relative;
    top: 2px;
    svg{
      height: rem(12);
      max-width:20px;
      width: auto;
    }
    &:first-child:last-child{
      margin-right: 0px;
    }
  }

  .btn-group > &{
    border-radius: #{_brand-sizes(btn_borderRadius)}px;
    line-height: rem(_lineHeight(btn));
  }
}

@each $btn in default, primary, success, danger, warning, info {
  .btn-#{$btn}{
    background-color: _brand-btn(#{$btn}_bg);
    background-image: -webkit-linear-gradient(_brand-btn(#{$btn}_bg) 0%, _brand-btn(#{$btn}-end_bg) 100%);
    background-image: -o-linear-gradient(_brand-btn(#{$btn}_bg) 0%, _brand-btn(#{$btn}-end_bg) 100%);
    background-image: linear-gradient(_brand-btn(#{$btn}_bg) 0%, _brand-btn(#{$btn}-end_bg) 100%);
    border-color: _brand-btn(#{$btn}-end_bg);
    color: _brand-btn(#{$btn}_color);
    @extend %btn;
    // text-shadow: 0px 0.5px 0px transparentize(map-get($brand-palette, btn-textShadow-#{$btn}), 0.6);
    &:hover,
    &:focus,
    &:active,
    &.active,
    &.focus {
      background-image: -webkit-linear-gradient(_brand-btn(#{$btn}-end_bg) 0%, _brand-btn(#{$btn}_bg) 100%);
      background-image: -o-linear-gradient(_brand-btn(#{$btn}-end_bg) 0%, _brand-btn(#{$btn}_bg) 100%);
      background-image: linear-gradient(_brand-btn(#{$btn}-end_bg) 0%, _brand-btn(#{$btn}_bg) 100%);
      background-position: inherit;
      color: _brand-btn(#{$btn}_color);
    }
    .svg--icon{
      svg{
        fill: _brand-btn(#{$btn}_svg);
      }
    }
  }
}

.btn{
  @extend .btn-default
}

.btn-default {
  .badge {
    background-color: rgba(50, 50, 50, 0.4);
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.3);
    color: #FFF;
    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);
  }
}

a.btn {
  &.disabled,
  fieldset[disabled] & {
    pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
  }
}

// .btn,
// .btn-sm,
// .btn-md,
// .btn-lg{
//   font-size: rem(_fontSizes(btn));
//   line-height: rem(_lineHeight(btn));
//   padding: 0 #{_brand-sizes(btn_paddingX)}px;
// }

.btn-xs,
.btn-small {
  border-radius: 1px;
  font-size: rem(_fontSizes(btnXs));
  line-height: rem(_lineHeight(btnXs));
  padding: #{_brand-sizes(btnXs-paddingY)}px #{_brand-sizes(btnXs-paddingX)}px;
}

.btn-large {
  border-radius: 1px;
  font-size: rem(_fontSizes(btnLg));
  line-height: rem(_lineHeight(btnLg));
  padding: #{_brand-sizes(btnLg-paddingY)}px #{_brand-sizes(btnLg-paddingX)}px;
}

.btn-group{
  display: inline-flex;
}
.btn-group > .btn,
.btn-group-sm > .btn,
.btn-group-lg > .btn {
  border-radius: #{_brand-sizes(btn_borderRadius)}px;
  line-height: rem(_lineHeight(btn));
}

.btn-group_theme{
  @extend .btn-group;
  & > [class^="btn-"]{
    @extend .btn-default;
  }
  & > [class^="btn-"].active{
    @extend .btn-primary
  }
}

.btn-link {
  border-radius: 0;
  box-shadow: none;
  color: _brand-palette(link_color);
  cursor: pointer;
  font-weight: _fontWeight(btn);
  @extend %btn;
  &,
  &:hover,
  &:focus,
  &[disabled],
  fieldset[disabled] &,
  &.active,
  &:active {
    background-color: transparent;
    border-color: transparent;
    box-shadow: none;
    outline: none;
  }
  &:hover,
  &:focus {
    color: _brand-palette(linkHover_color);
    text-decoration: none;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: _brand-palette(linkDisabled_color);
      text-decoration: none;
    }
  }
}

.btn-block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}
